1„ÄÅ10
1/10
setwd("~/Document/CS249_2/project/249-Sun/src")
setwd(getwd())
setwd(getwd())
read.csv("../edges_clean.txt", header = FALSE)
edges = read.csv("../edges_clean.txt", header = FALSE)
edges[1,]
edges = read.csv("../edges_clean.txt", header = FALSE, sep = " ")
edges[1,]
edges = read.csv("../edges_clean.txt", header = FALSE, sep = "\t")
edges[1,]
communities = read.csv("../top_5_communities.txt", header = FALSE, sep = "\t")
communities[1]
communities[1,]
communities[1,1]
communities[1,2]
communities[2]
communities[3]
communities[3,]
communities[3]
clear()
clearPushBack()
data = scan("../top_5_communities.txt")
data[1]
data[1,]
data[-1]
dim(data)
c1 = c(1,2,3)
c2 = c(c1,c1)
c2 = list(c1,c1)
c2.add(c(1,2))
c2[2] = c(1,1)
c2[1]
c2[2]
c2 = list(c1,c1)
communities <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- list(as.numeric(myVector[[1]]))
communities <- c(communities,myVector)
}
con  <- file("../top_5_communities.txt", open = "r")
communities <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- list(as.numeric(myVector[[1]]))
communities <- c(communities,myVector)
}
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, "\t"))
myVector <- list(as.numeric(myVector[[1]]))
communities <- c(communities,myVector)
}
communities <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, "\t"))
myVector <- list(as.numeric(myVector[[1]]))
communities <- c(communities,myVector)
}
rm(list = ls())
setwd(getwd())
edges = read.csv("../edges_clean.txt", header = FALSE, sep = "\t")
con  <- file("../top_5_communities.txt", open = "r")
rm(list = ls())
setwd(getwd())
edges = read.csv("../edges_clean.txt", header = FALSE, sep = "\t")
con  <- file("../top_5_communities.txt", open = "r")
communities <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, "\t"))
myVector <- list(as.numeric(myVector[[1]]))
communities <- c(communities,myVector)
}
close(con)
communities[1]
library('igraph')
library('igraph')
edges = as.matrix(edges)
edges[1,]
g=graph.edgelist(edges)
edges[1,]
edges +1
communities <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, "\t"))
myVector <- list(as.numeric(myVector[[1]]) + 1)
communities <- c(communities,myVector)
}
con  <- file("../top_5_communities.txt", open = "r")
communities <- list()
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, "\t"))
myVector <- list(as.numeric(myVector[[1]]) + 1)
communities <- c(communities,myVector)
}
edges = edges + 1
close(con)
edges = as.matrix(edges)
g=graph.edgelist(edges)
cluster_fast_greedy(g)
fastgreedy.community(g)
simplify(g)
g = as.undirected(g)
fastgreedy.community(g)
length(communities[1])
length(communities[2])
communities[1]
communities[1,]
length(communities[1])
lengths(communities[1])
edge_density(g)
g=graph.data.fram(edges)
g=graph.data.frame(edges)
g=graph.data.frame(edges,directed = FALSE)
fastgreedy.community(g)
connect(g)
edge_density(g)
is.connected(g)
diameter(g)
component_distribution(g)
components(g)
clu <- components(g)
groups(clu)
groups(clu)[1]
subV=groups(clu)[1]
subG = subgraph(g,subV)
subV
subV[1]
subV[1,1]
subV[[1]]
subV[[1,1]]
subV[1,1]
neighbors(g, 1)
